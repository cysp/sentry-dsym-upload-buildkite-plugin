#!/bin/bash

if [[ "$BUILDKITE_COMMAND_EXIT_STATUS" -ne 0 ]]; then
	echo '[!] Build failed, skipping Sentry dSYM upload'
	exit 0
fi

if [[ -z "${SENTRY_AUTH_TOKEN-}" ]]; then
	echo '[!] Sentry authentication token required'
	exit 1
fi

if [[ -n "${BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_ORG-}" ]]; then
	SENTRY_ORG=${BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_ORG}
elif [[ -n "${BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_ORG_FROM-}" ]]; then
	SENTRY_ORG=$(eval "echo \$$BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_ORG_FROM")
fi
if [[ -z "${SENTRY_ORG-}" ]]; then
	echo '[!] Sentry organization required'
	exit 1
fi

if [[ -n "${BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_PROJECT-}" ]]; then
	SENTRY_PROJECT=${BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_PROJECT}
elif [[ -n "${BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_PROJECT_FROM-}" ]]; then
	SENTRY_PROJECT=$(eval "echo \$$BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_PROJECT_FROM")
fi
if [[ -z "${SENTRY_PROJECT-}" ]]; then
	echo '[!] Sentry project required'
	exit 1
fi

SENTRY_CLI_INFO_PLIST=""
if [[ ! -z "${BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_INFO_PLIST-}" ]]; then
	SENTRY_CLI_INFO_PLIST="--info-plist "${BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_INFO_PLIST}""
fi

if [[ -z "${BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_PATH-}" ]]; then
	echo '[!] .dSYM path required'
	exit 1
fi

sentry-cli \
	upload-dsym \
	${SENTRY_CLI_INFO_PLIST} \
	-- \
	${BUILDKITE_PLUGIN_SENTRY_DSYM_UPLOAD_PATH}

if [[ "$?" -ne 0 ]]; then
    echo '[!] Sentry dSYM upload failed'
    exit 1
fi

exit 0
